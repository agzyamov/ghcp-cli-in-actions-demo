name: Copilot Agent Task (OAuth)

on:
  workflow_dispatch:
    inputs:
      task_description:
        description: 'Task description for Copilot Agent (e.g., "Create a function to sort arrays")'
        required: true
        type: string
      base_branch:
        description: 'Base branch for the PR (default: main)'
        required: false
        type: string
        default: 'main'

jobs:
  copilot-agent:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Verify GitHub CLI and agent-task
        run: |
          echo "🔍 Checking GitHub CLI version..."
          gh --version
          
          if ! gh agent-task --help &>/dev/null; then
            echo "❌ ERROR: gh agent-task command not available!"
            echo "GitHub CLI version must be 2.80.0 or later"
            exit 1
          fi
          
          echo "✅ GitHub CLI supports agent-task command"
      
      - name: Verify OAuth Token
        run: |
          echo "🔐 Verifying OAuth token..."
          TOKEN="${{ secrets.COPILOT_OAUTH_TOKEN }}"
          
          # Check token format (OAuth app tokens start with gho_, personal tokens with github_pat_ or ghp_)
          if [[ "$TOKEN" == gho_* ]]; then
            echo "✅ OAuth App token detected"
          elif [[ "$TOKEN" == github_pat_* ]]; then
            echo "✅ Personal OAuth token (fine-grained) detected"
            echo "⚠️  Note: Personal tokens have limitations compared to OAuth Apps"
          elif [[ "$TOKEN" == ghp_* ]]; then
            echo "✅ Personal OAuth token (classic) detected"
            echo "⚠️  Note: Personal tokens have limitations compared to OAuth Apps"
          else
            echo "❌ ERROR: Token does not appear to be an OAuth token"
            echo "Expected format: gho_* (OAuth app) or github_pat_*/ghp_* (personal)"
            exit 1
          fi
          
          # Authenticate gh CLI (unset GH_TOKEN first)
          echo "$TOKEN" | GH_TOKEN= gh auth login --with-token
          
          echo "✅ OAuth authentication successful"
      
      - name: Run Copilot Agent Task
        run: |
          echo "🤖 Starting GitHub Copilot Agent Task..."
          echo ""
          echo "📋 Task Details:"
          echo "  Task: ${{ inputs.task_description }}"
          echo "  Base: ${{ inputs.base_branch }}"
          echo "  Repo: ${{ github.repository }}"
          echo ""
          
          # Run agent-task and capture output
          gh agent-task create \
            "${{ inputs.task_description }}" \
            --base "${{ inputs.base_branch }}" \
            --repo "${{ github.repository }}" \
            --follow 2>&1 | tee agent_output.log
          
          echo ""
          echo "=== Agent Task Output ==="
          cat agent_output.log
          
          # Extract PR URL from output
          PR_URL=$(grep -oP 'https://github\.com/[^/]+/[^/]+/pull/\d+' agent_output.log | head -1 || echo "")
          
          if [ -n "$PR_URL" ]; then
            echo "PR_URL=$PR_URL" >> $GITHUB_ENV
            echo ""
            echo "✅ Pull Request created: $PR_URL"
          else
            echo ""
            echo "⚠️ Could not extract PR URL from agent output"
            echo "Check the logs artifact for details"
          fi
      
      - name: Upload Agent Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: copilot-agent-logs
          path: agent_output.log
          retention-days: 30
      
      - name: Create Summary
        if: always()
        run: |
          echo "## 🤖 GitHub Copilot Agent Task" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Task Description:** ${{ inputs.task_description }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Base Branch:** \`${{ inputs.base_branch }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Repository:** ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -n "$PR_URL" ]; then
            echo "**Pull Request:** $PR_URL" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "---" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### ✅ Success!" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "The Copilot agent has created a pull request and is working on your task." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**What happens next:**" >> $GITHUB_STEP_SUMMARY
            echo "- 🔄 The agent works autonomously on the task" >> $GITHUB_STEP_SUMMARY
            echo "- 💾 Commits are made as progress is made" >> $GITHUB_STEP_SUMMARY
            echo "- 👤 You'll be added as a reviewer when complete" >> $GITHUB_STEP_SUMMARY
            echo "- 🔔 You'll receive a notification when ready for review" >> $GITHUB_STEP_SUMMARY
          else
            echo "---" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### ⚠️ No PR Created" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "The agent task completed but no PR URL was detected." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Possible reasons:**" >> $GITHUB_STEP_SUMMARY
            echo "- Task description may need to be more specific" >> $GITHUB_STEP_SUMMARY
            echo "- Base branch might not exist" >> $GITHUB_STEP_SUMMARY
            echo "- Agent encountered an error (check logs)" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "📥 Download the **copilot-agent-logs** artifact for details." >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY